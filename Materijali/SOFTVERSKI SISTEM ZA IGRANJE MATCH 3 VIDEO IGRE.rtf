{\rtf1\ansi\ansicpg1252\deff0\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset238 Calibri;}}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\sa200\sl276\slmult1\qc\lang9\ul\b\f0\fs22 Softverski sistem za igranje Match 3 video igre\ulnone\b0\line\pard\sa200\sl276\slmult1\line\b Uvod\line\line\b0 Match 3 video igre su podvrsta puzzle video igara. \lang9242\f1 Igre ovog tipa o\'e8ekuju od igra\'e8a da sa spoji 3\line  ili vi\'9ae slika iste boje koriste\'e6i figuru koja mu je data. Svaki put kada spusti jednu figuru u \line prostor, pojavi\'e6e se nova figura koju korisnik tako\'f0e mora da ukombinuje na takav na\'e8in da \line napravi kombinaciju nekoliko istih slika. Nala\'9eenjem kombinacije, korisnik ostvaruje odre\'f0eni \line broj poena koji varira od igre do igre i u zavisnosti od toga koliko je figura korisnik povezao.\line U velikom broju ovakvih igara igra\'e8 se \'e8esto susre\'e6e sa protivnikom - softverskim sistemom koji\line  je dizajniran da igra video igru. Ovaj sistem mora da po\'9atuje pravila igre i da koristi sve opcije \line koje su mu dostupne u poku\'9aaju da pobedi igra\'e8a. Cilj igra\'e8a je da, uz pomo\'e6 svih tehnika i \line opcija koje ima na raspolaganju, pobedi sistem u igri. Uz to, sistem mora da bude dovoljno \line razvijen da pru\'9ei igra\'e8u adekvatan izazov.\line Pre nego \'9ato sistem odigra svoj potez, njemu se daje zadatak da analizira pojedine aspekte\line  video igre i da na osnovu njih donese odluku koji potez treba da odigra.  Neki od ovih aspekata \line su jednostavni (analiza figure koju koristi, detekcija svih slobodnih mesta gde mo\'9ee da stavi \line figuru) ali ima i onih koji su znatno komplikovaniji (nala\'9eenje mesta gde treba da stavi figuru, \line transformisanje figure u zavisnosti od toga gde mora da je stavi).\line U nastavku bi\'e6e redom obja\'9anjene sve analize, pretrage i transformacije koje sistem obavlja.\line\line\b Analiza figure\line\line\b0 Analiza figure podrazumeva nala\'9eenje lokacije figure\line  i formiranje veza.\line Svaka slika u prostoru se nalazi na odre\'f0enom polju. \line Prilikom analize figure, sistem tra\'9ei sva polja na \line kojima se nalazi figura (slike od te odre\'f0ene figure). \line Kada na\'f0e sva ova polja, sistem ih izdvoji za kasniju \line analizu i obradu.\line Izdvojena polja se dalje analiziraju kako bi se na\'9ale \line veze. Polja su vezana ako imaju istu sliku. Tako\'f0e, te \line slike moraju da budu usko povezane (kada bi se tako \line definisana veza slika povezala sa jo\'9a jednom istom \line slikom, mora da se napravi kombinacija po pravilima \line igre - u suprotnom, kombinacija nije usko povezana). \line Sistem napravi novu grupu u koju izdvoji sve veze, \line kao i slike zbog kojih su ta polja jednaka.\line Nakon zavr\'9aene analize figure, sistem \'e6e znati gde se \line nalazi figura, koje slike sadr\'9ei, kao i sve veze unutar te \line figure. Ova saznanja \'e6e sistemu biti potrebna kasnije \line prilikom tra\'9eenja zna\'e8ajnih lokacija i transformacije.\line\line\b Analiza prostora\b0\line\line Analiza prostora podrazumeva nala\'9eenje svih mesta \line (polja) na koja mo\'9ee da se stavi figura.\line Na samom po\'e8etku, figura mo\'9ee da se stavi bilo gde \line zato \'9ato je prostor potpuno prazan. Kako se \line popunjava prostor, tako se lokacija tih mesta menja \line (ukoliko je jedno slobodno mesto popunjeno, ono \line prestane da va\'9ei i uzima se novo slobodno mesto - \line iznad prethodno pomenutog zauzetog prostora). \line Slobodna pozicija ne predstavlja samo jedno polje \line iznad svakog zauzetog mesta - u obzir se uzima \line onoliko zauzetih mesta koliko (u visinu) zauzima \line figura koju \'e6e sistem stavljati. Bitno je napomenuti \line da se polje ne uzima u obzir ukoliko ono ne pripada \line radnom prostoru.\line Nakon zavr\'9aene analize prostora, sistem  \'e6e znati na \line koja sve mesta mo\'9ee da stavi figuru. Me\'f0utim, \line sistemu nisu jo\'9a poznata sva mesta (polja) na kojima \line mo\'9ee, u zavisnosti od figure koju koristi\lang1033\f0  i pravila igre\lang9242\f1 , \line da napravi kombinaciju. Zbog toga, nakon ove analize, \line sledi pretra\lang1033\f0 ga\lang9242\f1  zna\'e8ajnih mesta\lang1033\f0 .\line\line\b Pretraga zna\lang9242\f1\'e8\lang1033\f0 ajnih mesta\line\b0\line\lang9242\f1 Da bi sistem mogao da vr\'9ai ovu pretragu, on mora prethodno da sadr\'9ei osnovne informacije o\line  figuri koju koristi i prostoru u kom treba da stavi figuru. Zbog toga, analiza figure i analiza\line  prostora moraju da prethode pretrazi zna\'e8ajnih mesta.\line Sistem prvo pojedina\'e8no analizira svako slobodno polje u prostoru. Cilj ove analize je nala\'9eenje \line svih polja koja se nalaze oko polja koje se trenutno analizira (susedna polja). Pomo\'e6u susednih \line polja, sistem mo\'9ee da ispita da li \'e6e mo\'e6i, sa figurom koju trenutno koristi, da napravi \line kombinaciju. Kao susedna polja, smatra\'e6e se samo ona polja koja sistemu mogu da budu od \line koristi u odnosu na pravila igre (ukoliko\lang1033\f0 , po pravilima igre,\lang9242\f1  \lang1033\f0 ne moze da se napravi kombinacija sa \line poljima koja su dijagonalno povezana, onda se takva polja ne\lang9242\f1\'e6e smatrati susednim poljima).\lang9\f0  \line Sistem ih pritom izdvaja u posebne celine (jedna celina se sastoji iz slobodnog mesta i njegovih\line  susednih polja).\line Nakon \lang9242\f1\'9a\lang9\f0 to su sve celine izdvojene, potrebno je svaku od njih analizirati \lang9242\f1 kako bi se saznalo da li je \line slobodno polje (iz celine koja se trenutno ispituje) zna\'e8ajno.\lang1033\f0  Analiza celine se sastoji iz tri\lang9242\f1  \line provere \lang1033\f0 kroz koj\lang9242\f1 e\lang1033\f0  svaka celina mora da pro\lang9242\f1\'f0e. Te provere su:\line  - \ul Provera veze u figuri\ulnone : sistem proverava da li u figuri postoji veza \'e8ija polja imaju istu sliku kao \line polje koje se trenutno analizira. Ukoliko postoji takva veza, slobodno polje u trenutnoj celini \'e6e \line se smatrati zna\'e8ajnim poljem (zato \'9ato, spajanjem veze sa poljem koje se trenutno analizira, \line sistem mo\'9ee da napravi kombinaciju).\line - \ul Provera jednakosti\ulnone : sistem prvo proverava da li u celini postoje polja koja imaju me\'f0usobno \line jednake slike (ispituje sva susedna polja/polja oko slobodnog polja). Ukoliko takva polja postoje, \line sistem proverava da li figura koju trenutno koristi sadr\'9ei polje koje ima takvu sliku. Ako bi, po \line pravilima igre, mogla da se napravi kombinacija spajanjem jednakih polja iz celine sa \line odgovaraju\'e6im poljem iz figure (koja tako\'f0e sadr\'9ei tu sliku) onda \'e6e se slobodno polje u \line trenutnoj celini smatrati zna\'e8ajnim poljem.\line  - \ul Provera veze u prostoru\ulnone : sistem proverava da li je jedno od polja iz celine ve\'e6 deo neke veze u \line prostoru. Ako se ispostavi da je polje, koje se trenutno analizira, ve\'e6 deo neke veze, sistem \line ispituje da li u figuri postoji polje koje sadr\'9ei istu sliku kao i ta veza. Ako je to ta\'e8no, slobodno \line polje u trenutnoj celini \'e6e se smatrati zna\'e8ajnim poljem.\line Sva susedna polja iz celine moraju barem jedan od ovih testova da pro\'f0u kako bi se slobodno \line polje u celini smatralo zna\'e8ajnim poljem.\line Nakon zavr\'9aene pretrage zna\'e8ajnih mesta, sistem \'e6e znati koja su slobodna polja zna\'e8ajna (u \line kojim poljima mo\'9ee da formira kombinaciju), odnosno da li uop\'9ate postoje zna\'e8ajna polja. \line Nezavisno od toga da li postoje ili ne postoje zna\'e8ajna polja, sistem prelazi na pretragu va\'9ene \line pozicije.\line\line\b Pretraga va\'9ene pozicije\b0\line\lang9\f0\line Va\lang9242\f1\'9e\lang9\f0 na pozicija \lang9242\f1 predstavlja\lang9\f0  \lang9242\f1 zna\'e8ajno mesto na koje \'e6e sistem da stavi figuru. U ovoj pretrazi, \line sistem prolazi kroz sve zna\'e8ajne pozicije i tra\'9ei onu koja se nalazi najbli\'9ee levoj ivici prostora. \line Ukoliko ne postoji nijedna zna\'e8ajna pozicija, sistem \'e6e odrediti poziciju u zavisnosti od \'9aablona \line koji mu nala\'9ee da sve figure stavlja jednu pored druge, po\'e8ev\'9ai od leve ivice prostora. Ukoliko \line do\'f0e do desne ivice, sistem \'e6e resetovati \'9aablon i krenuti opet od leve ivice. Ukoliko, u \line slede\'e6em krugu provera, na\'f0e barem jednu zna\'e8ajnu poziciju prilikom pretrage zna\'e8ajnih \line pozicija, sistem \'e6e primeniti pretragu va\'9ene pozicije a dosada\'9anji \'9aablon \'e6e pauzirati i zapamti\'e6e \line do kog je mesta stao.\line Nakon zavr\'9aene pretrage va\'9ene pozicije, sistem \'e6e znati gde treba da stavi figuru. Sada sistem \line mora da premesti i transformi\'9ae figuru u zavisnosti od toga gde je va\'9ena pozicija sa kojom \line slikom u figuri mo\'9ee da napravi kombinaciju.\line\line\b Pomeranje i transformacija\b0\line\line\lang9\f0 Nakon \lang9242\f1\'9ato je sistem utvrdio na koju \'e6e poziciju da stavi figuru, on po\'e8inje da je pomera dok ne \line stigne do te pozicije. Pre svakog pomeranja, on ispituje da li se figura nalazi iznad va\'9ene pozicije \line (da li bi se figura, kada bi se spustila u prostor, poklopila sa va\'9enom pozicijom). Ukoliko se ne \line nalazi iznad va\'9ene pozicije, sistem \'e6e pomeriti figuru..Ukoliko ne postoji nijedna va\'9ena pozicija, \line sistem \'e6e pomerati figuru u odnosu na \'9aablon koji koristi kada ne postoji nijedno zna\'e8ajno \line mesto.\line Ako sistem utvrdi da se figura nalazi iznad va\'9ene pozicije, on \'e6e po\'e8eti da rotira figuru. \line Rotiranjem figure sistem osigurava da \'e6e napraviti kombinaciju kada se bude spustila figura \line (rotira figuru do tog momenta dok se boja u figuri ne poklopi sa bojom koja se tra\'9ei na va\'e6noj \line poziciji). Ako je tra\'9eena boja deo neke veze u figuri, sistem \'e6e rotirati figuru na taj na\'e8in da \line osigura da \'e6e se cela veza uzeti u obzir prilikom pravljenja kombinacije. Ukoliko ne postoji \line nijedna zna\'e8ajna pozicija, sistem ne\'e6e rotirati figuru.\line Nakon pomeranja i transformacije, sistem zavr\'9aava svoj krug zadataka sistem koji igra igru daje \line dozvolu sistemu za spu\'9atanje figure i pravljenje kombinacija da po\'e8ne sa radom.\line\line\b Spu\'9atanje figure i pravljenje kombinacija\b0\line\line Sistem koji igra igru se trenutno isklju\'e8uje i \line obave\'9atava sistem za spu\'9atanje figure i \line pravljenje kombinacija da krene sa \line spu\'9atanjem figure, nala\'9eenjem kombinacija\line  koje su formirane u prostoru i \line osve\'9eavanjem kompletnog prostora. Nakon \line ovih radnji, Sistem koji igra igru se ponovo \line aktivira kako bi obavio isti krug radnji, ali \line sa potpuno novom figurom.\line Ponovnim aktiviranjem sistema koji igra \line igru se zapo\'e8inje ciklus ispo\'e8etka. Ova \line radnja \'e6e da traje dok igra\'e8 ili sistem ne \line pobedi igru.\line Da bi se ispitalo da li sistem radi i koliko bi\line  igra\'e8u bilo te\'9ako da ga pobedi, potrebno je \line testirati sistem u programu u kom \'e6e mo\'e6i \line da praktikuje sve njegove sposobnosti \line (u Match 3 igri).\line\line\b Testiranje sistema - Primer igre, pravila igre, kako se pobe\'f0uje u igri\line\line\b0 U igri postoje dva igra\'e8a. Svaki igra\'e8 dobija \'e8etvrtastu figuru koju mo\'9ee da kontroli\'9ae. Cilj igre je da jedan igra\'e8, uz pomo\'e6 figure koju je dobio, sakupi vi\'9ae poena od svog protivnika.\b\line\b0 Svaki igra\'e8 ima svoj prostor, u kom ima jos po dva podprostora - radni prostor i rezultantni prostor. U radnom prostoru, igra\'e8 dobija figuru koju mo\'9ee da rotira gore, rotira dole i pomera na mesto na koje ho\'e6e da je stavi. Nakon \'9ato je zadovoljan sa transformacijom i lokacijom, igra\'e8 pritiskom dugmeta (ukoliko je \'e8ovek) signalizira program da prenese figuru u rezultantni prostor. U rezultantnom prostoru, na sve slike figure \'e6e uticati gravitacija i figura \'e6e krenuti da pada ka dole. Nakon \'9ato sve slike figure dotaknu donju ivicu prostora (ili prethodno stavljene slike), igra\'e8 dobija novu figuru kojom mo\'9ee da manipuli\'9ae.\line Ima ukupno \'9aest druga\'e8ijih slika u igri. Jedna figura sadr\'9ei ukupno \'e8etiri proizvoljne slike, ali ne moraju sve biti razli\'e8ite (mo\'9ee se desiti da jedna figura ima dve, tri, \'e8ak i \'e8etiri iste slike).\line Igra\'e8 mora, spu\'9atanjem figure u rezultantni prostor, da formira kombinaciju od minimum tri iste povezane slike kako bi osvojio poene. Broj poena koji se osvoji zavisi od toga koliko je istih slika povezao u kombinaciju.\line Pre nego \'9ato korisnik dobije novu figuru, program ispituje da li je korisnik ostvario kombinaciju i, ako jeste, bri\'9ae je iz rezultantnog prostora. Sva polja koja se nalaze iznad polja u kombinaciji se spu\'9ataju dole. \line Igra\'e8i mogu da stavljaju figuru gde god ho\'e6e u prostoru pod uslovom da obe kolone kroz koje prolazi figura nisu zauzete. Ako je ceo prostor zauzet, igra\'e8 ne\'e6e mo\'e6i nigde da stavi figuru I bi\'e6e primoran da \'e8eka kraj igre.\b\line\b0 Igru igraju \'e8ovek i robot. Na ekranu, sa leve strane, nalazi se prostor na kom igra \'e8ovek, a sa desne se nalazi prostor na kom igra robot. Igra traje 150 sekundi. Na kraju igre, igra\'e8 koji sakupi vi\'9ae poena \'e6e biti  pobednik.\line\line\b Testiranje sistema - da li robot predstavlja izazov igra\'e8u?\line\line\b0 Po\'9ato je cilj da sistem \'9ato br\'9ee do\'f0e do rezultata, a brzina spu\'9atanja figure mora da ostane jednaka (da ne bi jedan igra\'e8 imao prednost), jedino \'9ato se mo\'9ee menjati je brzina kojom sistem transformi\'9ae figuru.\line Sistem je pro\'9aao kroz ukupno 9 testova. Svaki test uzima u obzir koliko je poena osvojio \'c8ovek, koliko je poena osvojio Robot i razliku izme\'f0u njihovih poena. Brzina spu\'9atanja je konstantna (0.105s). Testovi se razlikuju po tome \'9ato se brzina, kojom sistem transformi\'9ae figuru, svaka tri slu\'e8aja smanjuje za 0.2 sekunde. U prve tri provere, brzina je 0.5s, u slede\'e6e tri provere je 0.3s, a u poslednje tri provere brzina je 0.1s. Nakon tri promene se izra\'e8unava srednja vrednost poena koje je svaki igra\'e8 osvojio, kao i razlika izme\'f0u srednjih vrednosti. Rezultati su:\line  - \ul 0.5s\ulnone : \'c8ovek je, u proseku, osvojio 129 poena, dok je Robot osvojio 96. Razlika izme\'f0u njihovih poena je 33. U prvoj i drugoj rundi o\'e8igledno je da je Robotova brzina prilikom transformacije figure napravila prili\'e8no veliku razliku izme\'f0u poena (najve\'e6a razlika je u drugoj proveri i iznosi 50). U tre\'e6oj proveri, \'e8ak i pored ljudske gre\'9ake i \'e8injenice da je Robot dobio figure sa kojima je mogao da napravi mnogo vi\'9ae kombinacija nego u poslednje dve partije, on jo\'9a uvek nije uspeo da pobedi \'e8oveka.\line  - \ul 0.3s\ulnone : U prve dve runde se jasno vidi da je Robot uspeo mnogo vi\'9ae poena da skupi sada u odnosu prethodne tri provere. Robotov prosek se pove\'e6ao za 24 poena (novi prosek je 120), a \'c8ovekov prosek je ostao 129. Razlika izme\'f0u poena se smanjila sa 33 na 9 i po prvi put je Robot do\'9aao blizu pobede (u tre\'e6oj proveri je nere\'9aeno, delom zbog faktora ljudske gre\'9ake, a delom zbog toga koje su figure dobijene). Iako Robot sada predstavlja ve\'e6i izazov za \'c8oveka, jo\'9a uvek nije uspeo da ga pobedi ni u jednoj partiji.\line - \ul 0.1s\ulnone : \'c8ovek nije nijednom uspeo da pobedi robota. Najmanju razliku u poenima \'c8ovek i Robot su imali u tre\'e6oj rundi (\'c8ovek 154, Robot 155).Ovo je tako\'f0e prvi put da je Robot imao ve\'e6u srednju vrednost poena od \'c8oveka - za \'e8ak 26 poena. \'c8ovekov prosek se pove\'e6ao za 5 u odnosu na prethodne provere, a Robotov prosek se pove\'e6ao za 40. O\'e8igledno, Robot predstavlja mnogo ve\'e6i izazov igra\'e8u.\line\line\b Zapa\'9eanja iz testova\line\b0\line 1. \ul Uspe\'9ana detekcija\ulnone : Svaki put kada sistem misli da je detektovao kombinaciju, uvek se ispostavi da ta kombinacija postoji. Svaki put kada zaklju\'e8i da nema kombinacije u prostoru i krene da stavlja figuru u zavisnosti od svog ugra\'f0enog \'9aablona, uvek se ispostavi da je doneo ispravnu odluku (ispostavi se da je dobro analizirao ceo prostor \'e8im se njegove provere poklapaju sa tim \'9ato se vidi u prostoru).\line 2. \ul Ne stigne da napuni ceo prostor\ulnone : Za Robota va\'9ei isto pravilo kao i za igra\'e8a - ukoliko napuni ceo rezultantni prostor, ne\'e6e mo\'e6i nigde vi\'9ae da stavlja figuru. Me\'f0utim, kroz svih 9 testova, nije uspeo nijednom da napuni ceo rezultantni prostor.\line 3. \ul Neravnomeran rast u poenima\ulnone : U svim testovima, \'c8ovek ima otprilike istu srednju vrednost ostvarenih poena (u 500ms proverama i 300ms proverama je 129, a u 100ms proveri se taj broj pove\'e8ao na 134). Broj srednjih poena se, kao \'9ato se i o\'e8ekuje, prilikom pove\'e6anja brzine kojom Robot transformi\'9ae figuru, pove\'e6ava i srednja vrednost osvojenih poena. Me\'f0utim, ovaj rast nije konstantan. Pove\'e6anje 500 - 300 iznosi 24 poena, a pove\'e6anje 300 - 100 iznosi \'e8ak 40. Promene su bile o\'e8ekivane, ali nije o\'e8ekivano odstupanje od skoro 70%. Dakle, samo zato \'9ato se ravnomerno pove\'e6ava brzina transformacije figure ne zna\'e8i da \'e6e se ravnomerno pove\'e6avati i broj poena koje \'e6e Robot da osvoji.\line 4. \ul Mogu\'e6a minimalna razlika u poenima\ulnone : U drugoj proveri, razlika izme\'f0u srednje vrednosti poena koje su igra\'e8i osvojili iznosi 9 bodova. U ovo situaciji, \'c8ovek je pobedio dve partije, a jedna je bila nere\'9aena. U tre\'e6oj proveri, razlika se pove\'e6ala na 26, me\'f0utim \'c8ovek je sve tri partije pobedio. Uzimaju\'e6i u obzir da je prvo \'c8ovek vodio sa 9 tokom 300ms provere, a gubio sa 33 tokom 100ms provere, mo\'9ee se sa sigurnosti re\'e6i da se, u opsegu od 100ms-300ms, mo\'9ee na\'e6i jedna brzina kod koje \'e6e se razlika u poenima jo\'9a vi\'9ae umanjiti (\'e8ak mo\'9eda i do 1 poena razlike).\line 5. \ul Te\'9eina Robota\ulnone : Robot mo\'9ee za manje od 1 milisekunde da obavi sve korake analize i pretrage, dok \'c8oveku treba mnogo du\'9ee. \'c8ovek ima nekoliko prednosti u odnosu na robota (mo\'9ee da proceni koja bi mu kombinacija donela vi\'f0\'9ae poena, mo\'9ee da ve\'9ee kombinacije jednu za drugim, kao i to \'9ato, za razliku od Robota, mo\'9ee da vidi slede\'e6u figuru koja mu dolazi pa mo\'9ee unapred da napravi odre\'f0enu strategiju). Od sva tri primera, naj po\'9ateniji je bio robot koji je imao brzinu transformacije 300ms. Ukoliko \'c8ovek napravi gre\'9aku ili se previ\'9ae zadr\'9ei razmi\'9aljaju\'e6i gde \'9ata da stavi, Robot mo\'9ee da ga stigne (i prestigne) u poenima. Najte\'9ei Robot je, naravno, onaj \'e8ija je brzina transformacije 100ms zato \'9ato \'c8oveku daje mnogo manje vremena da razmi\'9alja o tome gde \'e6e slede\'e6u figuru da stavi.\line\line\b Zaklju\'e8ak\line\b0\line Cilj ra\'e8unarskog protivnika u video igrama \line je da predstavi problem i prepreku igra\'e8u, \line teraju\'e6i ga da se uve\'9ebava kako bi mogao \line da ga pobedi i nastavi dalje sa igrom. \line Pru\'9eaju\'e6i izazov igra\'e8u, ra\'e8unarski protivnik \line pravi igru interesantnijom i du\'9eom. Ovaj \line sistem je imao zadatak da, u zavisnosti od \line pravila igre, osvaja pojene, nalazi na koja \line mesta da stavi figuru koju koristi i sazna \line kako da rotira figuru tako da napravi \line kombinaciju. Uspeh sistema u obavljanju svih\line  ovih zadataka je doveo do toga da on mo\'9ee da \line se sna\'f0e u bilo kom prostoru, koriste\'e6i bilo \line koju figuru. To garantuje da se ne mo\'9ee desiti \line da igra\'e8 igra jednu te istu igru dva puta - svaki \line put \'e6e i on i sistem dobiti druga\'e8iju figuru i, \line prativ\'9ai svoj \'9aablon, sistem \'e6e uvek stvoriti \line novi prostor sa kojim mora da radi.\line Uz pomo\'e6 ovog \'9aablona, sistem pru\'9ea \line adekvatan izazov igra\'e8u koji je igra. Time je \line potvr\'f0eno da ovaj \'9aablon ima primenu u \line igrama ovakvog tipa.\lang9\f0\line\par
}
 